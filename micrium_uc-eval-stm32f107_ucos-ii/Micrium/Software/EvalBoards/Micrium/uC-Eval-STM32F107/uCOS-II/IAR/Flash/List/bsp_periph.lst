###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.2.4510/W32 for ARM      08/Feb/2013  10:57:19 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\daniel01\Desktop\FastFile Test                  #
#                    Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32 #
#                    F107\BSP\bsp_periph.c                                    #
#    Command line =  "C:\Users\daniel01\Desktop\FastFile Test                 #
#                    Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32 #
#                    F107\BSP\bsp_periph.c" -D USE_STDPERIPH_DRIVER -lCN      #
#                    "C:\Users\daniel01\Desktop\FastFile Test                 #
#                    Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32 #
#                    F107\uCOS-II\IAR\Flash\List\" -o                         #
#                    "C:\Users\daniel01\Desktop\FastFile Test                 #
#                    Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32 #
#                    F107\uCOS-II\IAR\Flash\Obj\" --no_cse --no_unroll        #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I "C:\Users\daniel01\Desktop\FastFile Test       #
#                    Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32 #
#                    F107\uCOS-II\IAR\..\..\uCOS-II\" -I                      #
#                    "C:\Users\daniel01\Desktop\FastFile Test                 #
#                    Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32 #
#                    F107\uCOS-II\IAR\..\..\uCOS-II\IAR\" -I                  #
#                    "C:\Users\daniel01\Desktop\FastFile Test                 #
#                    Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32 #
#                    F107\uCOS-II\IAR\..\..\BSP\" -I                          #
#                    "C:\Users\daniel01\Desktop\FastFile Test                 #
#                    Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32 #
#                    F107\uCOS-II\IAR\..\..\BSP\OS\uCOS-II\" -I               #
#                    "C:\Users\daniel01\Desktop\FastFile Test                 #
#                    Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32 #
#                    F107\uCOS-II\IAR\..\..\BSP\ST\STM32\inc\" -I             #
#                    "C:\Users\daniel01\Desktop\FastFile Test                 #
#                    Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32 #
#                    F107\uCOS-II\IAR\..\..\BSP\uCOS-II\" -I                  #
#                    "C:\Users\daniel01\Desktop\FastFile Test                 #
#                    Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32 #
#                    F107\uCOS-II\IAR\..\..\BSP\IAR\" -I                      #
#                    "C:\Users\daniel01\Desktop\FastFile Test                 #
#                    Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32 #
#                    F107\uCOS-II\IAR\..\..\..\..\..\uC-LIB\" -I              #
#                    "C:\Users\daniel01\Desktop\FastFile Test                 #
#                    Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32 #
#                    F107\uCOS-II\IAR\..\..\..\..\..\uC-LIB\Ports\ARM-Cortex- #
#                    M3\IAR\" -I "C:\Users\daniel01\Desktop\FastFile Test     #
#                    Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32 #
#                    F107\uCOS-II\IAR\..\..\..\..\..\uC-CPU\" -I              #
#                    "C:\Users\daniel01\Desktop\FastFile Test                 #
#                    Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32 #
#                    F107\uCOS-II\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR #
#                    \" -I "C:\Users\daniel01\Desktop\FastFile Test           #
#                    Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32 #
#                    F107\uCOS-II\IAR\..\..\..\..\..\uCOS-II\Ports\ARM-Cortex #
#                    -M3\Generic\IAR\" -I "C:\Users\daniel01\Desktop\FastFile #
#                     Test Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval #
#                    -STM32F107\uCOS-II\IAR\..\..\..\..\..\uCOS-II\Source\"   #
#                    -On --use_c++_inline                                     #
#    List file    =  C:\Users\daniel01\Desktop\FastFile Test                  #
#                    Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32 #
#                    F107\uCOS-II\IAR\Flash\List\bsp_periph.lst               #
#    Object file  =  C:\Users\daniel01\Desktop\FastFile Test                  #
#                    Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32 #
#                    F107\uCOS-II\IAR\Flash\Obj\bsp_periph.o                  #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\daniel01\Desktop\FastFile Test Folder\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\bsp_periph.c
      1          /*
      2          *********************************************************************************************************
      3          *                                     MICIRUM BOARD SUPPORT PACKAGE
      4          *
      5          *                            (c) Copyright 2007-2008; Micrium, Inc.; Weston, FL
      6          *
      7          *                   All rights reserved.  Protected by international copyright laws.
      8          *                   Knowledge of the source code may not be used to write a similar
      9          *                   product.  This file may only be used in accordance with a license
     10          *                   and should not be redistributed in any way.
     11          *********************************************************************************************************
     12          */
     13          
     14          /*
     15          *********************************************************************************************************
     16          *
     17          *                                        BOARD SUPPORT PACKAGE
     18          *
     19          *                                     ST Microelectronics STM32
     20          *                                              on the
     21          *
     22          *                                     Micrium uC-Eval-STM32F107 
     23          *                                        Evaluation Board
     24          *
     25          * Filename      : bsp_periph.c
     26          * Version       : V1.00
     27          * Programmer(s) : EHS
     28          *********************************************************************************************************
     29          */
     30          
     31          /*
     32          *********************************************************************************************************
     33          *                                             INCLUDE FILES
     34          *********************************************************************************************************
     35          */
     36          
     37          #define  BSP_PERIPH_MODULE
     38          #include <bsp.h>
     39          
     40          
     41          /*
     42          *********************************************************************************************************
     43          *                                            LOCAL DEFINES
     44          *********************************************************************************************************
     45          */
     46          
     47          #define  BSP_PERIPH_REG_RCC_BASE                 0x40021000
     48          #define  BSP_PERIPH_REG_RCC_CFGR            (*(volatile  CPU_INT32U *)(BSP_PERIPH_REG_RCC_BASE + 0x004))
     49          #define  BSP_PERIPH_REG_RCC_AHBENR          (*(volatile  CPU_INT32U *)(BSP_PERIPH_REG_RCC_BASE + 0x014))
     50          #define  BSP_PERIPH_REG_RCC_APB2ENR         (*(volatile  CPU_INT32U *)(BSP_PERIPH_REG_RCC_BASE + 0x018))
     51          #define  BSP_PERIPH_REG_RCC_APB1ENR         (*(volatile  CPU_INT32U *)(BSP_PERIPH_REG_RCC_BASE + 0x01C))
     52          
     53          
     54          /*
     55          *********************************************************************************************************
     56          *                                           LOCAL CONSTANTS
     57          *********************************************************************************************************
     58          */
     59          
     60          
     61          /*
     62          *********************************************************************************************************
     63          *                                          LOCAL DATA TYPES
     64          *********************************************************************************************************
     65          */
     66          
     67          
     68          /*
     69          *********************************************************************************************************
     70          *                                            LOCAL TABLES
     71          *********************************************************************************************************
     72          */
     73          
     74          
     75          /*
     76          *********************************************************************************************************
     77          *                                       LOCAL GLOBAL VARIABLES
     78          *********************************************************************************************************
     79          */
     80          
     81          
     82          /*
     83          *********************************************************************************************************
     84          *                                      LOCAL FUNCTION PROTOTYPES
     85          *********************************************************************************************************
     86          */
     87          
     88          
     89          /*
     90          *********************************************************************************************************
     91          *                                     LOCAL CONFIGURATION ERRORS
     92          *********************************************************************************************************
     93          */
     94          
     95          
     96          /*
     97          *********************************************************************************************************
     98          *                                         BSP_PeriphClkFreqGet()
     99          *
    100          * Description : Get clock frequency of a peripheral.
    101          *
    102          * Argument(s) : pwr_clk_id      Power/clock ID.
    103          *
    104          * Return(s)   : none.
    105          *
    106          * Caller(s)   : Application.
    107          *
    108          * Note(s)     : none.
    109          *********************************************************************************************************
    110          */
    111          

   \                                 In section .text, align 2, keep-with-next
    112          CPU_INT32U  BSP_PeriphClkFreqGet (CPU_DATA  pwr_clk_id)
    113          {
   \                     BSP_PeriphClkFreqGet:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    114              CPU_INT32U  clk_freq;
    115              CPU_INT32U  clk_div;
    116          
    117          
    118              clk_freq = BSP_CPU_ClkFreq();
   \   00000004   0x.... 0x....      BL       BSP_CPU_ClkFreq
   \   00000008   0x0005             MOVS     R5,R0
    119          
    120              switch (pwr_clk_id) {
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0x2802             CMP      R0,#+2
   \   00000010   0xD921             BLS.N    ??BSP_PeriphClkFreqGet_0
   \   00000012   0x1F00             SUBS     R0,R0,#+4
   \   00000014   0xD01F             BEQ.N    ??BSP_PeriphClkFreqGet_0
   \   00000016   0x1E80             SUBS     R0,R0,#+2
   \   00000018   0xD01D             BEQ.N    ??BSP_PeriphClkFreqGet_0
   \   0000001A   0x1F80             SUBS     R0,R0,#+6
   \   0000001C   0xD01B             BEQ.N    ??BSP_PeriphClkFreqGet_0
   \   0000001E   0x1E80             SUBS     R0,R0,#+2
   \   00000020   0x2801             CMP      R0,#+1
   \   00000022   0xD918             BLS.N    ??BSP_PeriphClkFreqGet_0
   \   00000024   0x3812             SUBS     R0,R0,#+18
   \   00000026   0xD018             BEQ.N    ??BSP_PeriphClkFreqGet_1
   \   00000028   0x1E80             SUBS     R0,R0,#+2
   \   0000002A   0x2804             CMP      R0,#+4
   \   0000002C   0xD915             BLS.N    ??BSP_PeriphClkFreqGet_1
   \   0000002E   0x1FC0             SUBS     R0,R0,#+7
   \   00000030   0x2803             CMP      R0,#+3
   \   00000032   0xD912             BLS.N    ??BSP_PeriphClkFreqGet_1
   \   00000034   0x1F40             SUBS     R0,R0,#+5
   \   00000036   0xD010             BEQ.N    ??BSP_PeriphClkFreqGet_1
   \   00000038   0x3812             SUBS     R0,R0,#+18
   \   0000003A   0x2805             CMP      R0,#+5
   \   0000003C   0xD91C             BLS.N    ??BSP_PeriphClkFreqGet_2
   \   0000003E   0x380B             SUBS     R0,R0,#+11
   \   00000040   0xD01A             BEQ.N    ??BSP_PeriphClkFreqGet_2
   \   00000042   0x1EC0             SUBS     R0,R0,#+3
   \   00000044   0x2801             CMP      R0,#+1
   \   00000046   0xD917             BLS.N    ??BSP_PeriphClkFreqGet_2
   \   00000048   0x1EC0             SUBS     R0,R0,#+3
   \   0000004A   0x2805             CMP      R0,#+5
   \   0000004C   0xD914             BLS.N    ??BSP_PeriphClkFreqGet_2
   \   0000004E   0x3808             SUBS     R0,R0,#+8
   \   00000050   0x2804             CMP      R0,#+4
   \   00000052   0xD911             BLS.N    ??BSP_PeriphClkFreqGet_2
   \   00000054   0xE01F             B.N      ??BSP_PeriphClkFreqGet_3
    121                  case BSP_PERIPH_ID_DMA1:
    122                  case BSP_PERIPH_ID_DMA2:
    123                  case BSP_PERIPH_ID_SRAM:
    124                  case BSP_PERIPH_ID_FLITF:
    125                  case BSP_PERIPH_ID_CRC:
    126                  case BSP_PERIPH_ID_OTGFS:
    127                  case BSP_PERIPH_ID_ETHMAC:
    128                  case BSP_PERIPH_ID_ETHMACTX:   
    129                       return (clk_freq);
   \                     ??BSP_PeriphClkFreqGet_0:
   \   00000056   0x0028             MOVS     R0,R5
   \   00000058   0xE01E             B.N      ??BSP_PeriphClkFreqGet_4
    130          
    131                  case BSP_PERIPH_ID_AFIO:
    132                  case BSP_PERIPH_ID_IOPA:
    133                  case BSP_PERIPH_ID_IOPB:
    134                  case BSP_PERIPH_ID_IOPC:
    135                  case BSP_PERIPH_ID_IOPD:
    136                  case BSP_PERIPH_ID_IOPE:
    137                  case BSP_PERIPH_ID_ADC1:
    138                  case BSP_PERIPH_ID_ADC2:
    139                  case BSP_PERIPH_ID_TIM1:
    140                  case BSP_PERIPH_ID_SPI1:
    141                  case BSP_PERIPH_ID_USART1:
    142                       clk_div = (BSP_PERIPH_REG_RCC_CFGR & 0x00003800) >> 11;
   \                     ??BSP_PeriphClkFreqGet_1:
   \   0000005A   0x....             LDR.N    R0,??DataTable2  ;; 0x40021004
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0xF3C0 0x20C2      UBFX     R0,R0,#+11,#+3
   \   00000062   0x0006             MOVS     R6,R0
    143                       if (clk_div < 4) {
   \   00000064   0x2E04             CMP      R6,#+4
   \   00000066   0xD201             BCS.N    ??BSP_PeriphClkFreqGet_5
    144                           return (clk_freq);
   \   00000068   0x0028             MOVS     R0,R5
   \   0000006A   0xE015             B.N      ??BSP_PeriphClkFreqGet_4
    145                       }
    146                       clk_div   = (clk_div - 3) << 1;
   \                     ??BSP_PeriphClkFreqGet_5:
   \   0000006C   0x1EF0             SUBS     R0,R6,#+3
   \   0000006E   0x0046             LSLS     R6,R0,#+1
    147                       clk_freq /= clk_div;
   \   00000070   0xFBB5 0xF5F6      UDIV     R5,R5,R6
    148                       return (clk_freq);
   \   00000074   0x0028             MOVS     R0,R5
   \   00000076   0xE00F             B.N      ??BSP_PeriphClkFreqGet_4
    149          
    150                  case BSP_PERIPH_ID_TIM2:
    151                  case BSP_PERIPH_ID_TIM3:
    152                  case BSP_PERIPH_ID_TIM4:
    153                  case BSP_PERIPH_ID_TIM5:
    154                  case BSP_PERIPH_ID_TIM6:
    155                  case BSP_PERIPH_ID_TIM7:
    156                  case BSP_PERIPH_ID_WWDG:
    157                  case BSP_PERIPH_ID_SPI2:
    158                  case BSP_PERIPH_ID_SPI3:
    159                  case BSP_PERIPH_ID_USART2:
    160                  case BSP_PERIPH_ID_USART3:
    161                  case BSP_PERIPH_ID_USART4:
    162                  case BSP_PERIPH_ID_USART5:
    163                  case BSP_PERIPH_ID_I2C1:
    164                  case BSP_PERIPH_ID_I2C2:
    165                  case BSP_PERIPH_ID_CAN1:
    166                  case BSP_PERIPH_ID_CAN2:
    167                  case BSP_PERIPH_ID_BKP:
    168                  case BSP_PERIPH_ID_PWR:
    169                  case BSP_PERIPH_ID_DAC:
    170                       clk_div = (BSP_PERIPH_REG_RCC_CFGR & 0x00000700) >> 8;
   \                     ??BSP_PeriphClkFreqGet_2:
   \   00000078   0x....             LDR.N    R0,??DataTable2  ;; 0x40021004
   \   0000007A   0x6800             LDR      R0,[R0, #+0]
   \   0000007C   0xF3C0 0x2002      UBFX     R0,R0,#+8,#+3
   \   00000080   0x0006             MOVS     R6,R0
    171                       if (clk_div < 4) {
   \   00000082   0x2E04             CMP      R6,#+4
   \   00000084   0xD201             BCS.N    ??BSP_PeriphClkFreqGet_6
    172                           return (clk_freq);
   \   00000086   0x0028             MOVS     R0,R5
   \   00000088   0xE006             B.N      ??BSP_PeriphClkFreqGet_4
    173                       }
    174                       clk_div   = (clk_div - 3) << 1;
   \                     ??BSP_PeriphClkFreqGet_6:
   \   0000008A   0x1EF0             SUBS     R0,R6,#+3
   \   0000008C   0x0046             LSLS     R6,R0,#+1
    175                       clk_freq /= clk_div;
   \   0000008E   0xFBB5 0xF5F6      UDIV     R5,R5,R6
    176                       return (clk_freq);
   \   00000092   0x0028             MOVS     R0,R5
   \   00000094   0xE000             B.N      ??BSP_PeriphClkFreqGet_4
    177              }
    178          
    179              return ((CPU_INT32U)0);
   \                     ??BSP_PeriphClkFreqGet_3:
   \   00000096   0x2000             MOVS     R0,#+0
   \                     ??BSP_PeriphClkFreqGet_4:
   \   00000098   0xBD70             POP      {R4-R6,PC}       ;; return
    180          }
    181          
    182          
    183          /*
    184          *********************************************************************************************************
    185          *                                             BSP_PeriphEn()
    186          *
    187          * Description : Enable clock for peripheral.
    188          *
    189          * Argument(s) : pwr_clk_id      Power/clock ID.
    190          *
    191          * Return(s)   : none.
    192          *
    193          * Caller(s)   : Application.
    194          *
    195          * Note(s)     : none.
    196          *********************************************************************************************************
    197          */
    198          

   \                                 In section .text, align 2, keep-with-next
    199          void  BSP_PeriphEn (CPU_DATA  pwr_clk_id)
    200          {
    201              switch (pwr_clk_id) {
   \                     BSP_PeriphEn:
   \   00000000   0x0001             MOVS     R1,R0
   \   00000002   0x2900             CMP      R1,#+0
   \   00000004   0x2902             CMP      R1,#+2
   \   00000006   0xD921             BLS.N    ??BSP_PeriphEn_0
   \   00000008   0x1F09             SUBS     R1,R1,#+4
   \   0000000A   0xD01F             BEQ.N    ??BSP_PeriphEn_0
   \   0000000C   0x1E89             SUBS     R1,R1,#+2
   \   0000000E   0xD01D             BEQ.N    ??BSP_PeriphEn_0
   \   00000010   0x1F89             SUBS     R1,R1,#+6
   \   00000012   0xD01B             BEQ.N    ??BSP_PeriphEn_0
   \   00000014   0x1E89             SUBS     R1,R1,#+2
   \   00000016   0x2901             CMP      R1,#+1
   \   00000018   0xD918             BLS.N    ??BSP_PeriphEn_0
   \   0000001A   0x3912             SUBS     R1,R1,#+18
   \   0000001C   0xD01E             BEQ.N    ??BSP_PeriphEn_1
   \   0000001E   0x1E89             SUBS     R1,R1,#+2
   \   00000020   0x2904             CMP      R1,#+4
   \   00000022   0xD91B             BLS.N    ??BSP_PeriphEn_1
   \   00000024   0x1FC9             SUBS     R1,R1,#+7
   \   00000026   0x2903             CMP      R1,#+3
   \   00000028   0xD918             BLS.N    ??BSP_PeriphEn_1
   \   0000002A   0x1F49             SUBS     R1,R1,#+5
   \   0000002C   0xD016             BEQ.N    ??BSP_PeriphEn_1
   \   0000002E   0x3912             SUBS     R1,R1,#+18
   \   00000030   0x2905             CMP      R1,#+5
   \   00000032   0xD91D             BLS.N    ??BSP_PeriphEn_2
   \   00000034   0x390B             SUBS     R1,R1,#+11
   \   00000036   0xD01B             BEQ.N    ??BSP_PeriphEn_2
   \   00000038   0x1EC9             SUBS     R1,R1,#+3
   \   0000003A   0x2901             CMP      R1,#+1
   \   0000003C   0xD918             BLS.N    ??BSP_PeriphEn_2
   \   0000003E   0x1EC9             SUBS     R1,R1,#+3
   \   00000040   0x2905             CMP      R1,#+5
   \   00000042   0xD915             BLS.N    ??BSP_PeriphEn_2
   \   00000044   0x3908             SUBS     R1,R1,#+8
   \   00000046   0x2904             CMP      R1,#+4
   \   00000048   0xD912             BLS.N    ??BSP_PeriphEn_2
   \   0000004A   0xE01A             B.N      ??BSP_PeriphEn_3
    202                  case BSP_PERIPH_ID_DMA1:
    203                  case BSP_PERIPH_ID_DMA2:
    204                  case BSP_PERIPH_ID_SRAM:
    205                  case BSP_PERIPH_ID_FLITF:
    206                  case BSP_PERIPH_ID_CRC:
    207                  case BSP_PERIPH_ID_OTGFS:
    208                  case BSP_PERIPH_ID_ETHMAC:
    209                  case BSP_PERIPH_ID_ETHMACTX:        
    210                       BSP_PERIPH_REG_RCC_AHBENR |= DEF_BIT(pwr_clk_id);
   \                     ??BSP_PeriphEn_0:
   \   0000004C   0x....             LDR.N    R1,??DataTable2_1  ;; 0x40021014
   \   0000004E   0x6809             LDR      R1,[R1, #+0]
   \   00000050   0x2201             MOVS     R2,#+1
   \   00000052   0x4082             LSLS     R2,R2,R0
   \   00000054   0x4311             ORRS     R1,R2,R1
   \   00000056   0x....             LDR.N    R2,??DataTable2_1  ;; 0x40021014
   \   00000058   0x6011             STR      R1,[R2, #+0]
    211                       break;
   \   0000005A   0xE012             B.N      ??BSP_PeriphEn_3
    212          
    213                  case BSP_PERIPH_ID_AFIO:
    214                  case BSP_PERIPH_ID_IOPA:
    215                  case BSP_PERIPH_ID_IOPB:
    216                  case BSP_PERIPH_ID_IOPC:
    217                  case BSP_PERIPH_ID_IOPD:
    218                  case BSP_PERIPH_ID_IOPE:        
    219                  case BSP_PERIPH_ID_ADC1:
    220                  case BSP_PERIPH_ID_ADC2:
    221                  case BSP_PERIPH_ID_TIM1:
    222                  case BSP_PERIPH_ID_SPI1:
    223                  case BSP_PERIPH_ID_USART1:
    224                       BSP_PERIPH_REG_RCC_APB2ENR |= DEF_BIT(pwr_clk_id - 32);
   \                     ??BSP_PeriphEn_1:
   \   0000005C   0x....             LDR.N    R1,??DataTable2_2  ;; 0x40021018
   \   0000005E   0x6809             LDR      R1,[R1, #+0]
   \   00000060   0x2201             MOVS     R2,#+1
   \   00000062   0x0003             MOVS     R3,R0
   \   00000064   0x3B20             SUBS     R3,R3,#+32
   \   00000066   0x409A             LSLS     R2,R2,R3
   \   00000068   0x4311             ORRS     R1,R2,R1
   \   0000006A   0x....             LDR.N    R2,??DataTable2_2  ;; 0x40021018
   \   0000006C   0x6011             STR      R1,[R2, #+0]
    225                       break;
   \   0000006E   0xE008             B.N      ??BSP_PeriphEn_3
    226          
    227                  case BSP_PERIPH_ID_TIM2:
    228                  case BSP_PERIPH_ID_TIM3:
    229                  case BSP_PERIPH_ID_TIM4:
    230                  case BSP_PERIPH_ID_TIM5:
    231                  case BSP_PERIPH_ID_TIM6:
    232                  case BSP_PERIPH_ID_TIM7:
    233                  case BSP_PERIPH_ID_WWDG:
    234                  case BSP_PERIPH_ID_SPI2:
    235                  case BSP_PERIPH_ID_SPI3:
    236                  case BSP_PERIPH_ID_USART2:
    237                  case BSP_PERIPH_ID_USART3:
    238                  case BSP_PERIPH_ID_USART4:
    239                  case BSP_PERIPH_ID_USART5:
    240                  case BSP_PERIPH_ID_I2C1:
    241                  case BSP_PERIPH_ID_I2C2:
    242                  case BSP_PERIPH_ID_CAN1:
    243                  case BSP_PERIPH_ID_CAN2:        
    244                  case BSP_PERIPH_ID_BKP:
    245                  case BSP_PERIPH_ID_PWR:
    246                  case BSP_PERIPH_ID_DAC:
    247                       BSP_PERIPH_REG_RCC_APB1ENR |= DEF_BIT(pwr_clk_id - 64);
   \                     ??BSP_PeriphEn_2:
   \   00000070   0x....             LDR.N    R1,??DataTable2_3  ;; 0x4002101c
   \   00000072   0x6809             LDR      R1,[R1, #+0]
   \   00000074   0x2201             MOVS     R2,#+1
   \   00000076   0x0003             MOVS     R3,R0
   \   00000078   0x3B40             SUBS     R3,R3,#+64
   \   0000007A   0x409A             LSLS     R2,R2,R3
   \   0000007C   0x4311             ORRS     R1,R2,R1
   \   0000007E   0x....             LDR.N    R2,??DataTable2_3  ;; 0x4002101c
   \   00000080   0x6011             STR      R1,[R2, #+0]
    248                       break;
    249              }
    250          }
   \                     ??BSP_PeriphEn_3:
   \   00000082   0x4770             BX       LR               ;; return
    251          
    252          
    253          /*
    254          *********************************************************************************************************
    255          *                                             BSP_PeriphDis()
    256          *
    257          * Description : Disable clock for peripheral.
    258          *
    259          * Argument(s) : pwr_clk_id      Power/clock ID.
    260          *
    261          * Return(s)   : none.
    262          *
    263          * Caller(s)   : Application.
    264          *
    265          * Note(s)     : none.
    266          *********************************************************************************************************
    267          */
    268          

   \                                 In section .text, align 2, keep-with-next
    269          void  BSP_PeriphDis (CPU_DATA  pwr_clk_id)
    270          {
    271              switch (pwr_clk_id) {
   \                     BSP_PeriphDis:
   \   00000000   0x0001             MOVS     R1,R0
   \   00000002   0x2900             CMP      R1,#+0
   \   00000004   0x2902             CMP      R1,#+2
   \   00000006   0xD921             BLS.N    ??BSP_PeriphDis_0
   \   00000008   0x1F09             SUBS     R1,R1,#+4
   \   0000000A   0xD01F             BEQ.N    ??BSP_PeriphDis_0
   \   0000000C   0x1E89             SUBS     R1,R1,#+2
   \   0000000E   0xD01D             BEQ.N    ??BSP_PeriphDis_0
   \   00000010   0x1F89             SUBS     R1,R1,#+6
   \   00000012   0xD01B             BEQ.N    ??BSP_PeriphDis_0
   \   00000014   0x1E89             SUBS     R1,R1,#+2
   \   00000016   0x2901             CMP      R1,#+1
   \   00000018   0xD918             BLS.N    ??BSP_PeriphDis_0
   \   0000001A   0x3912             SUBS     R1,R1,#+18
   \   0000001C   0xD01E             BEQ.N    ??BSP_PeriphDis_1
   \   0000001E   0x1E89             SUBS     R1,R1,#+2
   \   00000020   0x2904             CMP      R1,#+4
   \   00000022   0xD91B             BLS.N    ??BSP_PeriphDis_1
   \   00000024   0x1FC9             SUBS     R1,R1,#+7
   \   00000026   0x2903             CMP      R1,#+3
   \   00000028   0xD918             BLS.N    ??BSP_PeriphDis_1
   \   0000002A   0x1F49             SUBS     R1,R1,#+5
   \   0000002C   0xD016             BEQ.N    ??BSP_PeriphDis_1
   \   0000002E   0x3912             SUBS     R1,R1,#+18
   \   00000030   0x2905             CMP      R1,#+5
   \   00000032   0xD91D             BLS.N    ??BSP_PeriphDis_2
   \   00000034   0x390B             SUBS     R1,R1,#+11
   \   00000036   0xD01B             BEQ.N    ??BSP_PeriphDis_2
   \   00000038   0x1EC9             SUBS     R1,R1,#+3
   \   0000003A   0x2901             CMP      R1,#+1
   \   0000003C   0xD918             BLS.N    ??BSP_PeriphDis_2
   \   0000003E   0x1EC9             SUBS     R1,R1,#+3
   \   00000040   0x2905             CMP      R1,#+5
   \   00000042   0xD915             BLS.N    ??BSP_PeriphDis_2
   \   00000044   0x3908             SUBS     R1,R1,#+8
   \   00000046   0x2904             CMP      R1,#+4
   \   00000048   0xD912             BLS.N    ??BSP_PeriphDis_2
   \   0000004A   0xE01A             B.N      ??BSP_PeriphDis_3
    272                  case BSP_PERIPH_ID_DMA1:
    273                  case BSP_PERIPH_ID_DMA2:
    274                  case BSP_PERIPH_ID_SRAM:
    275                  case BSP_PERIPH_ID_FLITF:
    276                  case BSP_PERIPH_ID_CRC:
    277                  case BSP_PERIPH_ID_OTGFS:
    278                  case BSP_PERIPH_ID_ETHMAC:
    279                  case BSP_PERIPH_ID_ETHMACTX:  
    280                       BSP_PERIPH_REG_RCC_AHBENR &= ~DEF_BIT(pwr_clk_id);
   \                     ??BSP_PeriphDis_0:
   \   0000004C   0x....             LDR.N    R1,??DataTable2_1  ;; 0x40021014
   \   0000004E   0x6809             LDR      R1,[R1, #+0]
   \   00000050   0x2201             MOVS     R2,#+1
   \   00000052   0x4082             LSLS     R2,R2,R0
   \   00000054   0x4391             BICS     R1,R1,R2
   \   00000056   0x....             LDR.N    R2,??DataTable2_1  ;; 0x40021014
   \   00000058   0x6011             STR      R1,[R2, #+0]
    281                       break;
   \   0000005A   0xE012             B.N      ??BSP_PeriphDis_3
    282          
    283                  case BSP_PERIPH_ID_AFIO:
    284                  case BSP_PERIPH_ID_IOPA:
    285                  case BSP_PERIPH_ID_IOPB:
    286                  case BSP_PERIPH_ID_IOPC:
    287                  case BSP_PERIPH_ID_IOPD:
    288                  case BSP_PERIPH_ID_IOPE:
    289                  case BSP_PERIPH_ID_ADC1:
    290                  case BSP_PERIPH_ID_ADC2:
    291                  case BSP_PERIPH_ID_TIM1:
    292                  case BSP_PERIPH_ID_SPI1:
    293                  case BSP_PERIPH_ID_USART1:
    294                       BSP_PERIPH_REG_RCC_APB2ENR &= ~DEF_BIT(pwr_clk_id - 32);
   \                     ??BSP_PeriphDis_1:
   \   0000005C   0x....             LDR.N    R1,??DataTable2_2  ;; 0x40021018
   \   0000005E   0x6809             LDR      R1,[R1, #+0]
   \   00000060   0x2201             MOVS     R2,#+1
   \   00000062   0x0003             MOVS     R3,R0
   \   00000064   0x3B20             SUBS     R3,R3,#+32
   \   00000066   0x409A             LSLS     R2,R2,R3
   \   00000068   0x4391             BICS     R1,R1,R2
   \   0000006A   0x....             LDR.N    R2,??DataTable2_2  ;; 0x40021018
   \   0000006C   0x6011             STR      R1,[R2, #+0]
    295                       break;
   \   0000006E   0xE008             B.N      ??BSP_PeriphDis_3
    296          
    297                  case BSP_PERIPH_ID_TIM2:
    298                  case BSP_PERIPH_ID_TIM3:
    299                  case BSP_PERIPH_ID_TIM4:
    300                  case BSP_PERIPH_ID_TIM5:
    301                  case BSP_PERIPH_ID_TIM6:
    302                  case BSP_PERIPH_ID_TIM7:
    303                  case BSP_PERIPH_ID_WWDG:
    304                  case BSP_PERIPH_ID_SPI2:
    305                  case BSP_PERIPH_ID_SPI3:
    306                  case BSP_PERIPH_ID_USART2:
    307                  case BSP_PERIPH_ID_USART3:
    308                  case BSP_PERIPH_ID_USART4:
    309                  case BSP_PERIPH_ID_USART5:
    310                  case BSP_PERIPH_ID_I2C1:
    311                  case BSP_PERIPH_ID_I2C2:
    312                  case BSP_PERIPH_ID_CAN1:
    313                  case BSP_PERIPH_ID_CAN2:        
    314                  case BSP_PERIPH_ID_BKP:
    315                  case BSP_PERIPH_ID_PWR:
    316                  case BSP_PERIPH_ID_DAC:
    317                       BSP_PERIPH_REG_RCC_APB1ENR &= ~DEF_BIT(pwr_clk_id - 64);
   \                     ??BSP_PeriphDis_2:
   \   00000070   0x....             LDR.N    R1,??DataTable2_3  ;; 0x4002101c
   \   00000072   0x6809             LDR      R1,[R1, #+0]
   \   00000074   0x2201             MOVS     R2,#+1
   \   00000076   0x0003             MOVS     R3,R0
   \   00000078   0x3B40             SUBS     R3,R3,#+64
   \   0000007A   0x409A             LSLS     R2,R2,R3
   \   0000007C   0x4391             BICS     R1,R1,R2
   \   0000007E   0x....             LDR.N    R2,??DataTable2_3  ;; 0x4002101c
   \   00000080   0x6011             STR      R1,[R2, #+0]
    318                       break;
    319              }
    320          }
   \                     ??BSP_PeriphDis_3:
   \   00000082   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x40021004         DC32     0x40021004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x40021014         DC32     0x40021014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x40021018         DC32     0x40021018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x4002101C         DC32     0x4002101c

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   BSP_PeriphClkFreqGet
        16   -> BSP_CPU_ClkFreq
       0   BSP_PeriphDis
       0   BSP_PeriphEn


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
     154  BSP_PeriphClkFreqGet
     132  BSP_PeriphDis
     132  BSP_PeriphEn

 
 434 bytes in section .text
 
 434 bytes of CODE memory

Errors: none
Warnings: none
